#
# Build
#

build { core init hello drivers/timer server/failsafe/server/direct }

create_boot_directory

#
# Generate config
#

install_config {
<config>
	<parent-provides>
		<service name="CAP"/>
		<service name="LOG"/>
		<service name="RM"/>
		<service name="RAM"/>
		<service name="CPU"/>
		<service name="PD"/>
		<service name="SIGNAL"/>
		<!-- some timer implementations need kernel info pages -->
		<service name="ROM"/>

		<!-- hardware-based timers need I/O resources -->
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<start name="failsafe_server">
		<resource name="RAM" quantum="50M"/>
		<provides>
			  <service name="Hello"/>
			  <service name="Failsafe"/>
		</provides>
		<route>
			<any-service><parent/><any-child/></any-service>
		</route>
	</start>
	<start name="dr_client">
		<resource name="RAM" quantum="10M"/>
	</start>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
</config>}

#
# Boot image
#

build_boot_image { core init dr_client hello_server red_server timer failsafe_server }

append qemu_args " -nographic "

run_genode_until forever
